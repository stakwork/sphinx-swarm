name: Docker build on push
env:
  DOCKER_CLI_EXPERIMENTAL: enabled

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and push sphinx swarm image
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Check out from Git
        uses: actions/checkout@v2
      - name: Test env
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test print env
        run: |
          echo $RELEASE_TAG
          echo ${{ env.RELEASE_TAG }}
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Run Build
        working-directory: ./app
        run: |
          yarn install
          yarn run build
      - name: Setup Docker buildx action
        uses: crazy-max/ghaction-docker-buildx@v1
        id: buildx
        with:
          buildx-version: latest
          qemu-version: latest
      - name: Show available buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Cache Docker layers
        uses: actions/cache@v4
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Test print env
        run: |
          echo $RELEASE_TAG
          echo ${{ env.RELEASE_TAG }}
      - name: Run Docker buildx
        run: |
          docker buildx build \
          -f src/bin/stack/Dockerfile \
          --cache-to "type=local,dest=/tmp/.buildx-cache" \
          --platform linux/amd64 \
          --tag "${{ secrets.DOCKER_HUB_USER }}/sphinx-swarm:${{ env.RELEASE_TAG }}" \
          --tag "${{ secrets.DOCKER_HUB_USER }}/sphinx-swarm:latest" \
          --output "type=registry" ./
